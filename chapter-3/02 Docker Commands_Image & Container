# 컨테이너 관리와 관련된 사이트
# docs.docker.com
# hub.docker.com
# gallery.ecr.aws

#######################################################################################
#01. 컨테이너 이미지 관리commands
#웹서버 컨테이너 nginx와 리눅스 명령어를 모아놓은 busybox 컨테이너 이미지를 다운로드 받아 실행

# 컨테이너 검색
# hub.docker.com
docker search busybox   

# 컨테이너 다운로드
sudo ls /var/lib/docker/overlay2
docker pull busybox
sudo ls /var/lib/docker/overlay2
docker image ls


docker pull nginx:1.22
docker pull nginx:1.25
docker pull nginx:latest
docker images

# AWS 겔러리를 통해 컨테이너 이미지 다운로드
https://gallery.ecr.aws/

# apache 검색 -  
# bitnami: 가상 어플라이언스 및 웹 애플리케이션, 개발 스택용 소프트웨어 패키지 및 설치 라이브러리이다. 
docker pull public.ecr.aws/bitnami/apache:latest
docker images


# 이미지 히스토리 보기
docker history nginx:1.25
docker history busybox

# 이미지 세부 정보 확인
docker inspect busybox
docker inspect public.ecr.aws/bitnami/apache:latest


# 이미지 삭제
docker rmi busybox
docker rmi nginx:1.22
docker rmi public.ecr.aws/bitnami/apache:latest
docker images


#######################################################################################
#02. 컨테이너 관리
# 컨테이너는 읽기전용의 이미지 레이어(불변의 유니언 파일 시스템UFS) + 읽기쓰기 가능한 컨테이어 레이어를 결합
# 컨테이너는 격리된 공간에서 프로세스가 동작하는 기술
# 컨테이너 생성(create): 컨테이너 레이어 생성)
# 컨테이너 실행(start)을 하면 격리된 환경에서 프로세스로 동작

# nginx 웹서버 컨테이너를 동작하고 서비스 동작 흐름 확인 및 운영

# 컨테이너 생성(create) -> 시작(start) -> 동작확인(curl IP_Address) -> 중지(stop) -> 삭제(rm)
docker images
docker create --name web nginx:latest
docker ps
docker ps -a

docker start web
docker ps

# 컨테이너 세부정보 출력
docker inspect web

curl 172.17.0.2 

docker stop web
docker ps -a
docker rm web


# background 서비스 실행
# run: pull -> create -> start 
docker run --help
docker run -d --name web nginx:latest
docker ps
curl 172.17.0.2


# 컨테이너 내부에서 명령어 실행 docker exec
docker exec -it web /bin/bash
pwd
cd /usr/share/nginx/html
ls
echo "TEST WEB PAGE" > index.html
exit

curl 172.17.0.2


# 호스트 파일을 컨테이너로 복사하기 : docker cp
echo 'Fast Campus!' > index.html
ls
cat index.html
docker cp index.html web:/usr/share/nginx/html
curl 172.17.0.2

# 컨테이너 로그, 프로세스 관련 조작 명령어 사용
docker logs web
docker top web
docker diff web

# container 종료 및 삭제
docker stop web
docker ps
docker ps -a

docker rm web
docker ps -a

# foreground 컨테이너 실행
# run: pull -> create -> start -> attach
docker run -it --name c1 busybox:latest
ls /bin
date
mkdir testdir
cd testdir/
ls
cd
whoami
exit

# docker rm
docker rm c1
docker ps -a
