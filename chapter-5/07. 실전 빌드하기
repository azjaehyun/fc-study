
# Jenkins 컨테이너 - 플러그인 포함하여 빌드하기
mkdir jenkins-build
cd jenkins-build

cat > Dockerfile
FROM jenkins/jenkins:2.387.2
#FROM jenkins/jenkins:latest

USER root

# docker in docker install
RUN apt-get update && \
    apt-get -y install apt-transport-https \
      ca-certificates \
      curl \
      gnupg2 \
      jq \
      software-properties-common && \
    curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo "$ID")/gpg > /tmp/dkey; apt-key add /tmp/dkey && \
    add-apt-repository \
      "deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") \
      $(lsb_release -cs) \
      stable" && \
   apt-get update && \
   apt-get -y install docker-ce
   
RUN groupadd -f docker
RUN usermod -aG docker jenkins

#aws cli install
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
RUN unzip awscliv2.zip
RUN ./aws/install

LABEL maintainer="azjaehyun@gmail.com"
ENV JENKINS_USER admin
ENV JENKINS_PASS admin
ENV JAVA_OPTS -Djenkins.install.runSetupWizard=true
RUN jenkins-plugin-cli \
    --plugins \
    git \
    workflow-aggregator \
    blueocean \
    docker-plugin \
    ant \
    gradle \
    pipeline-aws \
    pipeline-build-step \
    pipeline-github-lib \
    pipeline-rest-api \
    pipeline-stage-view \
    timestamper \
    aws-credentials \
    file-operations \
    branch-api \
    workflow-support \
    pam-auth \
    ldap \
    email-ext \
    matrix-auth \
    ws-cleanup \
    resource-disposer \
    antisamy-markup-formatter \
    build-timeout \
    nodejs \
    slack:664.vc9a_90f8b_c24a_ 

# Jenkins-ci:latest 컨테이너 빌드
docker build -t jenkins-ci .
docker images

# Docker-in Docker 로 Jenkins 실행 후 로그인 인증서 확인
docker run --name jenkins -d \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -p 80:8080 jenkins-cli

#Jankins Admin login password 확인
docker logs jenkins

# 원격접속 -
